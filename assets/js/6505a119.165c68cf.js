"use strict";(self.webpackChunktouchlab=self.webpackChunktouchlab||[]).push([[787],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=o,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9687:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={},a="Non-Kotlin Environments",l={unversionedId:"configuration/NON_KOTLIN",id:"configuration/NON_KOTLIN",title:"Non-Kotlin Environments",description:"You can call Kermit from non-Kotlin code, but because of the way interop works, calling from those environments won't let you use default parameters. That will make calling Kotlin fairly verbose.",source:"@site/docs/configuration/NON_KOTLIN.md",sourceDirName:"configuration",slug:"/configuration/NON_KOTLIN",permalink:"/docs/configuration/NON_KOTLIN",draft:!1,editUrl:"https://github.com/touchlab/Kermit/tree/main/website/docs/configuration/NON_KOTLIN.md",tags:[],version:"current",lastUpdatedBy:"Kevin Galligan",lastUpdatedAt:1677950217,formattedLastUpdatedAt:"Mar 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Message Formatting",permalink:"/docs/configuration/MESSAGE_FORMATTING"},next:{title:"Testing",permalink:"/docs/TESTING"}},c={},s=[],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"non-kotlin-environments"},"Non-Kotlin Environments"),(0,o.kt)("p",null,"You can call Kermit from non-Kotlin code, but because of the way interop works, calling from those environments won't let you use default parameters. That will make calling Kotlin fairly verbose."),(0,o.kt)("p",null,"Earlier versions of Kermit were designed to be Swift-friendly, but that sacrificed the Kotlin-friendly API, and since the primary use-case is calling Kermit from Kotlin, that seemed like a bad compromise."),(0,o.kt)("p",null,"We've added a module called ",(0,o.kt)("inlineCode",{parentName:"p"},"kermit-simple")," which adds explicit call signatures to the API, to provide for the cases where default parameters make more sense in a Kotlin context."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'kotlin {\n    sourceSets {\n        val commonMain by getting {\n            dependencies {\n                // etc\n                api("co.touchlab:kermit:1.2.2")\n            }\n        }\n\n        val iosMain by getting {\n            dependencies {\n                // etc\n                api("co.touchlab:kermit-simple:1.2.2")\n            }\n        }\n    }\n\n    cocoapods {\n        framework {\n            export("co.touchlab:kermit:1.2.2")\n            export("co.touchlab:kermit-simple:1.2.2")\n        }\n    }\n}\n')),(0,o.kt)("p",null," You will need to export ",(0,o.kt)("inlineCode",{parentName:"p"},"kermit-simple"),", as in the example above."))}u.isMDXComponent=!0}}]);